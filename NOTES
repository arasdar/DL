# Installing the nvidia driver compatible with cuda9.2 and tensorflow-1.11
sudo apt-add-repository ppa:graphics-drivers/ppa -y


find . | grep req
./udacity-dl/GAN/floyd_requirements.txt
./uri-dl/uri-dl-hw-2/assignment2/requirements.txt

find . -name *req*
./udacity-dl/GAN/floyd_requirements.txt
./uri-dl/uri-dl-hw-2/assignment2/requirements.txt
arasdar@amd64-ubuntuDesktop-16:~/github/arasdar-DL-git$ 

# To find and rm a folder/directory
find ./ -name 20* -exec rm -r {} \;

# Mujoco get id problem with chmod
chmod u=rwx getid_linux 

# FOr ssh tunelling for jupyter notebook
arasdar@amd64-UbuntuDesktop-16:~$ ssh -N -f -L localhost:8889:localhost:8888 131.128.51.143
arasdar@amd64-UbuntuDesktop-16:~$ ssh -N -f -L localhost:8889:localhost:8888 131.128.51.143
This has been tested multiple times.
Run jupyter-notebook in he remote host and the above command on local host.
Open the browser and change the port from 8889 to 8888.

# For tensorflow installation
conda install tensorflow <CPU>
conda install tensorflow-GPU <GPU>

# How to update Anaconda -- this was the actual command I typed and worked!
conda update --prefix ~/anaconda3 anaconda

# Please update conda by running
conda update -n base conda

# For numba and cuda-python programming:
sudo apt-get install nvidia-modprobe
This does magic in recognizing the GPU-device in the system!
I don't know how.

# Show the remote origin url
git remote --verbose or -v
git remote show origin

# Installing Xcodes for github use or CLI use
# Installing homwbrew as MacOS package manager instead of apt-get
/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

# How to configure git lfs or large file storage in github
Download and install GIT-LFS package/ binaries.
git lfs install
git lfs track <files/folder>
git add <files/folder> with .gitattribute
git commit -m "message related to LFS files"
git push

# I think there may be a potential bug in cloning with git lfs (Still to be determined). 
# You can try this method of fetching the repo, which is in fact faster too:
// Skip smudge - We'll download binary files later in a faster batch
git lfs install --skip-smudge

// Do git clone here
git clone ...

// Fetch all the binary files in the new clone
git lfs pull

// Reinstate smudge
git lfs install --force
This only needs to be done once to initialize the clone for the first time.

# Installing stuff using conda-forge
conda-forge is a github organization containing repositories of conda recipes. 
Thanks to some awesome continuous integration providers (AppVeyor, CircleCI and TravisCI), 
each repository, also known as a feedstock, automatically 
builds its own recipe in a clean and repeatable way on Windows, Linux and OSX.

# Installing xelatex/texlive
sudo apt-get install texlive-xetex

# how to format the usb drive in linux
lsblk # list the disk block storage
sudo dd if=/dev/zero of=/dev/sdb bs=1024 or 2K or 25M
sudo dd if=ubunutu.core of=/dev/sdb bs=25M
fdisk /dev/sdb # format disk
n # new partition
w # write the disk into partition?
sudo dd if=ubunutu-core-amd64-x86-64-i386 of=/dev/sdb or sdc bs=32M or 1024 or 1K or 1M
sync # synchronizing disk with what???
sudo eject /dev/sdc

# installing eclipse for c++
sudo apt-get install eclipse eclipse-cdt

# Snap and snapcraft
snapcraft init
snapcraft
snapcraft login
snapcraft register app-name
snapcraft push app-name_versions.snap
snapcraft release revision=<1, 2, 3> channel=<stable, edge, candidate, ..>
snap install app-name --channel=<channel-mode>

# Different ways of copying in the shell
cp -r or -R dir-src dir-tgt
rsync -a --exclusion=dir-to-exclude dir-src dir-tgt
dd if=ubuntu-desktop-x86-64.iso or ubuntu-core-x86-64.img of=/dev/sdb
sudo dd if=ubuntu-mate-arm-hf.img of=/dev/sdb bs=48M
sudo dd if=ubuntu-mate-arm-hf.img of=/dev/sdb bs=48M

# Architecture I am familiar with now
arm, amd64/32 or x86_64/32 or i686 for intell
qualcomm is also another one.

## Lib Dynamic Dependencies
arm-linux-gnueabihf-readelf -a finroc_crash_course | grep NEEDED # for arm
ldd # for amd/intel arch

# ssh into arm and amd/intel
# ssh into rasberry pie and laptop
raspie-config for ssh enable
install openSSH and systemctl enable ssh
